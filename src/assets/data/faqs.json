{
  "faqs": [
    {
      "question": "How many ARS controls are assessed under the CMS SAF?",
      "answer": "Currently, about 121 CMS ARS 3.1 security controls are assessed under this framework. Note that assessment coverage varies based on the component type. For more information, click here:",
      "links": [
        {
          "name": "CMS SAF ARS Assessment Range",
          "download_link": "CMS_SAF_ARS_Assessment_Range_04232020.pdf"
        }
      ]
    },
    {
      "question": "How are ARS (NIST SP 800-53) Security Control associations included in the assessment tests used in this framework?",
      "answer": "NIST SP 800-53 associations are included in all InSpec profiles and output from other security tools processed through Heimdall_tools. See our presentation to learn more!",
      "links": [
        {
          "name": "InSpec, HDF, and NIST SP 800-53 Security Controls",
          "download_link": "CMS_InSpec_Profiles_and_HDF_include_NIST_SP-800-53_associations_04232020.pdf"
        }
      ]
    },
    {
      "question": "How can I use InSpec tests in my CI/CD pipeline?",
      "answer": "InSpec tests can be integrated as part of a test battery in your favorite CI platform. For example, you can add InSpec testing to your Travis CI file to run InSpec automatically. For further details, please see our Advanced InSpec Developer's Course.",
      "code": "// travis.yml\n\nsudo: required\n\n# blocklist\n#branches:\n#  except:\n#  - development\n\n# safelist\n#branches:\n#  only:\n#  - master\n#  - stable\n\nlanguage: ruby\nrvm:\n  - 2.6.1\n\ncache: bundler\n\naddons:\n  apt:\n    sources:\n      - chef-current-xenial\n    # packages:\n    #   - chef-workstation\n  #artifacts: true\n\n# Don't `bundle install` which takes about 1.5 mins\ninstall:\n\nservices: docker\n\nenv:\n  matrix:\n  - INSTANCE=default-ubuntu-1604\n\nbefore_script:\n  - wget https://packages.chef.io/files/stable/chef-workstation/0.5.1/ubuntu/16.04/chef-workstation_0.5.1-1_amd64.deb\n  - sudo dpkg -i chef-workstation_*.deb\n  - rm chef-workstation_*.deb\n  - sudo iptables -L DOCKER || ( echo \"DOCKER iptables chain missing\" ; sudo iptables -N DOCKER )\n  - eval\\$(chef shell-init bash)\"\n  - gem install bundler:2.0.1\n  - gem install inspec_tools\n  - inspec --version\n  - CHEF_LICENSE=accept chef gem update inspec\n  - CHEF_LICENSE=accept chef gem update inspec-bin\n  - /opt/chef-workstation/embedded/bin/gem update inspec\n  - /opt/chef-workstation/embedded/bin/gem update inspec-bin\n  - inspec --version\n  - bundle update --bundler\n  - bundle install\n  - chef --version\n  - cookstyle --version\n  - foodcritic --version\n\nscript: \n  - CHEF_LICENSE=accept-no-persist KITCHEN_LOCAL_YAML=kitchen.dokken.yml CHEF_VERSION=\\${CHEF_VERSION} kitchen verify \\${INSTANCE} || true\n  - export RESULTS=\\$(ls results/*.json)\n  - inspec_tools compliance -j $RESULTS -f threshold.yml",
      "links": [
        {
          "name": "InSpec Pipeline Integration Example",
          "link": "https://mitre-inspec-advanced-developer.netlify.com/course/4.html"
        }
      ]
    }    
  ]
}
